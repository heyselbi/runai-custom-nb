{{- define "runai-common.job.volume.mounts" }}

# Not using concat to support previous version of helm
{{- $combinedVolume := list }}
{{- range $volume := (.Values.volume | default list) }}
{{- $combinedVolume = append $combinedVolume $volume }}
{{- end}}
{{- range $volume := (.Values.volumeDefault | default list) }}
{{- $combinedVolume = append $combinedVolume $volume }}
{{- end}}

{{- $propagate := .Values.mountPropagation }}

{{- if or .Values.persistentVolumes .Values.nfsVolumes (gt (len $combinedVolume) 0) .Values.shm .Values.createHomeDir .Values.gitSync.sync }}
volumeMounts:
  {{- range $index, $volume := $combinedVolume -}}
  {{ $parts := split ":" $volume }}
  - mountPath: {{ $parts._1 }}
    name: {{ include "host.path.volume.name" (dict "volumeIndex" $index) }}
    {{- if eq $parts._2 "ro" }}
    readOnly: true
    {{- end}}
    {{- if $propagate }}
    mountPopagation: HostToContainer
    {{- end}}
  {{- end }}
  {{- if .Values.shm }}
  - mountPath: /dev/shm
    name: dshm
  {{- end }}
  {{- if .Values.createHomeDir }}
  - mountPath: /home/runai-home
    name: user-data
    {{- if $propagate }}
    mountPopagation: HostToContainer
    {{- end}}
  {{- end }}
  {{- if .Values.gitSync.sync }}
  - mountPath: {{ .Values.gitSync.directory }}
    name: code-sync
  {{- end }}
  {{- if .Values.persistentVolumes }}
  {{- range $index, $pvcParam := .Values.persistentVolumes }}
  {{- $pvcParamParts := split ":" $pvcParam }}
  {{ include "runai-common.job.volumne.mounts.pvc" (dict "pvcIndex" $index "pvcParamParts" $pvcParamParts) }}
  {{- end }}
  {{- end }}
  {{- if .Values.nfsVolumes }}
  {{- range $index, $nfsParam := .Values.nfsVolumes }}
  {{- $nfsParamParts := split "," $nfsParam }}
  - mountPath: {{ $nfsParamParts._2 }}
    name: {{ $nfsParamParts._3 }}
    {{- if eq $nfsParamParts._4 "ro" }}
    readOnly: true 
    {{- end }}
  {{- end }}
  {{- end }}
{{- end -}}

{{- end -}}


{{- define "runai-common.job.volumne.mounts.pvc" }}

{{- $pvcIndex := (get . "pvcIndex") -}}
{{- $pvcParamParts := (get . "pvcParamParts") -}}
{{- $mountPath := ternary $pvcParamParts._1 $pvcParamParts._2 (eq (len $pvcParamParts) 3) -}}
  - mountPath: {{ $mountPath }}
    name: {{ include "pvc.volume.name" (dict "volumeIndex" $pvcIndex) }}
    {{- if or (and (eq (len $pvcParamParts) 4) (eq $pvcParamParts._3 "ro")) (and (eq (len $pvcParamParts) 3) (eq $pvcParamParts._2 "ro")) }}
    readOnly: true
    {{- end }}

{{- end -}}


{{- define "runai-common.job.volumes" }}

# Not using concat to support previous version of helm
  {{- $combinedVolume := list }}
  {{- range $volume := (.Values.volume | default list) }}
  {{- $combinedVolume = append $combinedVolume $volume }}
  {{- end}}
  {{- range $volume := (.Values.volumeDefault | default list) }}
  {{- $combinedVolume = append $combinedVolume $volume }}
  {{- end}}

{{- if or .Values.persistentVolumes .Values.nfsVolumes (gt (len $combinedVolume) 0) .Values.shm .Values.createHomeDir .Values.gitSync.sync }}
volumes:
  {{- range $index, $volume := $combinedVolume -}}
  {{ $parts := split ":" $volume }}
  - name: {{ include "host.path.volume.name" (dict "volumeIndex" $index) }}
    hostPath:
      path: {{ $parts._0 }}
  {{- end }}
  {{- if .Values.shm }}
  - name: dshm
    emptyDir:
      medium: Memory
  {{- end }}
  {{- if .Values.createHomeDir }}
  - name: user-data
    emptyDir: {}
  {{- end }}
  {{- if .Values.gitSync.sync }}
  - name: code-sync
    emptyDir: {}
  {{- end }}
  {{- range $index, $pvcParam := .Values.persistentVolumes }}
  - name: {{ include "pvc.volume.name" (dict "volumeIndex" $index) }}
    persistentVolumeClaim:
      claimName: {{ include "pvc.claim.name" (dict "pvcIndex" $index "pvcParam" $pvcParam "releaseName" $.Release.Name) }}
  {{- end }}
  {{- if .Values.nfsVolumes }}
  {{- range $index, $nfsParam := .Values.nfsVolumes }}
  {{- $nfsParamParts := split "," $nfsParam }}
  - name: {{ $nfsParamParts._3 }}
    nfs:
      server: {{ $nfsParamParts._0 }}
      path: {{ $nfsParamParts._1 }}
  {{- end }}
  {{- end }}
{{- end }}

{{- end -}}
